version: '3.8'

volumes:
  pg_data:
  backend_static:  # Отдельный volume для статики бэкенда
  frontend_static: # Отдельный volume для статики фронтенда
  media:

services:
  db:
    image: postgres:13
    env_file: .env
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    image: markuser4556/kittygram_backend:latest
    env_file: .env
    restart: always
    volumes:
      - backend_static:/backend_static  # Только статика Django
      - media:/app/media
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: markuser4556/kittygram_frontend:latest
    env_file: .env
    restart: always
    command: sh -c "cp -r /app/build/* /frontend_static/ && cp -r /app/build/static/ /frontend_static/ && sleep infinity"
    volumes:
      - frontend_static:/frontend_static  # Статика React
    depends_on:
      - backend

  gateway:
    image: markuser4556/kittygram_gateway:latest
    env_file: .env
    restart: always
    ports:
      - 9000:80
    volumes:
      - backend_static:/backend_static    # Статика Django
      - frontend_static:/frontend_static  # Статика фронтенда
      - media:/media
    depends_on:
      - backend
      - frontend