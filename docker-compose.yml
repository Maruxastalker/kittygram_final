
volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  backend:
    build: ./backend/
    env_file: .env
    command: >
      sh -c "python manage.py collectstatic --noinput &&
           python manage.py migrate &&
           gunicorn --bind 0.0.0.0:9000 kittygram.wsgi"
    volumes:
      - static:/backend_static
      - media:/app/media
    depends_on:
      - db
  frontend:
    env_file: .env
    build: ./frontend/
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static:/frontend_static
  gateway:
    build: ./nginx/
    env_file: .env
    ports:
      - 9000:80
    volumes:
      - static:/staticfiles
      - media:/staticfiles/media/